policy_module(fail2ban_remote, 0.0.4)

require {
	type devlog_t;
	type fail2ban_t;
	type kernel_t;
	type node_t;
	type user_devpts_t;
};

type fbr_remote_t;
type fbr_remote_exec_t;
type fbr_port_t;

init_daemon_domain(fbr_remote_t, fbr_remote_exec_t)
corenet_port(fbr_port_t)

# logging to syslog
allow fbr_remote_t self:unix_dgram_socket { create connect write };
allow fbr_remote_t devlog_t:sock_file write;
allow fbr_remote_t kernel_t:unix_dgram_socket sendto;

# logging to stderr (when testing with runcon)
bool fbr_remote_log_stderr false;
if (fbr_remote_log_stderr) {
	allow fbr_remote_t user_devpts_t:chr_file { read append write };
}

# listening socket
allow fbr_remote_t self:udp_socket { create bind read };
allow fbr_remote_t fbr_port_t:udp_socket name_bind;
allow fbr_remote_t node_t:udp_socket node_bind;
allow fbr_remote_t self:capability net_bind_service;

# netlink socket
allow fbr_remote_t self:netlink_socket { create bind getattr write read };
allow fbr_remote_t self:capability net_admin;

# Fail2Ban action socket
allow fail2ban_t fbr_port_t:udp_socket name_bind;
allow fail2ban_t self:capability net_bind_service;
